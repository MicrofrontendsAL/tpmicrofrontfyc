{"version":3,"sources":["../src/single-spa-svelte.js"],"names":[],"mappings":"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","file":"single-spa-svelte.js","sourcesContent":["const defaultOpts = {\n  // required opts\n  component: null,\n\n  // optional opts\n  domElementGetter: null,\n  props: {},\n};\n\nexport default function singleSpaSvelte(userOpts) {\n  if (typeof userOpts !== \"object\") {\n    throw new Error(`single-spa-svelte requires a configuration object`);\n  }\n\n  const opts = {\n    ...defaultOpts,\n    ...userOpts,\n  };\n\n  if (!opts.component) {\n    throw new Error(\"single-spa-svelte must be passed opts.component\");\n  }\n\n  // Just a shared object to store the mounted object state\n  let mountedInstances = {};\n\n  return {\n    bootstrap: bootstrap.bind(null, opts, mountedInstances),\n    mount: mount.bind(null, opts, mountedInstances),\n    unmount: unmount.bind(null, opts, mountedInstances),\n    update: update.bind(null, opts, mountedInstances),\n  };\n}\n\nfunction bootstrap(opts) {\n  return Promise.resolve();\n}\n\nfunction mount(opts, mountedInstances, singleSpaProps) {\n  const defaultOptKeys = Object.keys(defaultOpts);\n\n  const svelteOpts = Object.keys(opts).reduce((object, key) => {\n    if (!defaultOptKeys.includes(key)) {\n      object[key] = opts[key];\n    }\n    return object;\n  }, {});\n\n  return Promise.resolve().then(() => {\n    const domElementGetter = chooseDomElementGetter(opts, singleSpaProps);\n    const domElement = domElementGetter();\n    // See https://svelte.dev/docs#Creating_a_component\n    mountedInstances.instance = new opts.component({\n      ...svelteOpts,\n      target: domElement,\n      props: Object.assign({}, singleSpaProps, opts.props),\n    });\n  });\n}\n\nfunction unmount(opts, mountedInstances) {\n  return Promise.resolve().then(() => {\n    mountedInstances.instance.$destroy\n      ? mountedInstances.instance.$destroy()\n      : mountedInstances.instance.destroy();\n  });\n}\n\nfunction update(opts, mountedInstances, props) {\n  return Promise.resolve().then(() => {\n    mountedInstances.instance.$set\n      ? mountedInstances.instance.$set(props)\n      : mountedInstances.instance.set(props);\n  });\n}\n\nfunction chooseDomElementGetter(opts, props) {\n  props = props && props.customProps ? props.customProps : props;\n  if (props.domElement) {\n    return () => props.domElement;\n  } else if (props.domElementGetter) {\n    return () => props.domElementGetter(props);\n  } else if (opts.domElementGetter) {\n    return () => opts.domElementGetter(props);\n  } else {\n    return defaultDomElementGetter(props);\n  }\n}\n\nfunction defaultDomElementGetter(props) {\n  const appName = props.appName || props.name;\n  if (!appName) {\n    throw Error(\n      `single-spa-svelte was not given an application name as a prop, so it can't make a unique dom element container for the svelte application`\n    );\n  }\n  const htmlId = `single-spa-application:${appName}`;\n\n  return function defaultDomEl() {\n    let domElement = document.getElementById(htmlId);\n    if (!domElement) {\n      domElement = document.createElement(\"div\");\n      domElement.id = htmlId;\n      document.body.appendChild(domElement);\n    }\n\n    return domElement;\n  };\n}\n"]}