{"version":3,"file":"770.js","mappings":"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","sources":["webpack://nav/../../node_modules/.pnpm/dom-element-getter-helpers@1.1.1/node_modules/dom-element-getter-helpers/lib/dom-element-getter-helpers.js","webpack://nav/../../src/single-spa-react.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nexport function chooseDomElementGetter(opts, props) {\n  var domElementGetter;\n\n  if (props.domElement) {\n    domElementGetter = function domElementGetter() {\n      return props.domElement;\n    };\n  } else if (props.domElementGetter) {\n    domElementGetter = props.domElementGetter;\n  } else if (opts.domElementGetter) {\n    domElementGetter = opts.domElementGetter;\n  } else {\n    domElementGetter = defaultDomElementGetter(props);\n  }\n\n  if (typeof domElementGetter !== \"function\") {\n    throw Error(\"single-spa's dom-element-getter-helpers was given an invalid domElementGetter for application or parcel '\".concat(props.name, \"'. Expected a function, received \").concat(_typeof(domElementGetter)));\n  }\n\n  return function () {\n    var domElement = domElementGetter(props);\n\n    if (!(domElement instanceof HTMLElement)) {\n      throw Error(\"single-spa's dom-element-getter-helpers: domElementGetter returned an invalid dom element for application or parcel '\".concat(props.name, \"'. Expected HTMLElement, received \").concat(_typeof(domElement)));\n    }\n\n    return domElement;\n  };\n}\n\nfunction defaultDomElementGetter(props) {\n  var appName = props.appName || props.name;\n\n  if (!appName) {\n    throw Error(\"single-spa's dom-element-getter-helpers was not given an application name as a prop, so it can't make a unique dom element container for the react application\");\n  }\n\n  var htmlId = \"single-spa-application:\".concat(appName);\n  return function defaultDomEl() {\n    var domElement = document.getElementById(htmlId);\n\n    if (!domElement) {\n      domElement = document.createElement(\"div\");\n      domElement.id = htmlId;\n      document.body.appendChild(domElement);\n    }\n\n    return domElement;\n  };\n}\n","/* We don't import parcel.component.js from this file intentionally. See comment\n * in that file for why\n */\n\nimport { chooseDomElementGetter } from \"dom-element-getter-helpers\";\n\n// React context that gives any react component the single-spa props\nexport let SingleSpaContext = null;\n\n// This try/catch exists mostly to prevent rollup from thinking that SingleSpaContext\n// is null and then doing optimizations in parcel.js that cause bugs.\n// See https://github.com/single-spa/single-spa-react/issues/105\n\ntry {\n  // single-spa-react is usable as a global script, as a systemjs module, and other\n  // situations where require() is unavailable. This is why we require the user to\n  // pass in opts.React and opts.ReactDOM - to avoid the mess of \"how do i properly load react\".\n  // However, in situations where require() is available, we can use it this way to create\n  // the react context. The try/catch defensiveness keeps single-spa-react working in\n  // as many situations as possible.\n  SingleSpaContext = require(\"react\").createContext();\n} catch {\n  // ignore\n}\n\nconst defaultOpts = {\n  // required opts\n  React: null,\n  ReactDOM: null,\n\n  // required - one or the other\n  rootComponent: null,\n  loadRootComponent: null,\n\n  // optional opts\n  renderType: null,\n  errorBoundary: null,\n  errorBoundaryClass: null,\n  domElementGetter: null,\n  parcelCanUpdate: true, // by default, allow parcels created with single-spa-react to be updated\n  suppressComponentDidCatchWarning: false,\n  domElements: {},\n  renderResults: {},\n  updateResolves: {},\n};\n\nexport default function singleSpaReact(userOpts) {\n  if (typeof userOpts !== \"object\") {\n    throw new Error(`single-spa-react requires a configuration object`);\n  }\n\n  const opts = {\n    ...defaultOpts,\n    ...userOpts,\n  };\n\n  if (!opts.React) {\n    throw new Error(`single-spa-react must be passed opts.React`);\n  }\n\n  if (!opts.ReactDOM) {\n    throw new Error(`single-spa-react must be passed opts.ReactDOM`);\n  }\n\n  if (!opts.rootComponent && !opts.loadRootComponent) {\n    throw new Error(\n      `single-spa-react must be passed opts.rootComponent or opts.loadRootComponent`\n    );\n  }\n\n  if (opts.errorBoundary && typeof opts.errorBoundary !== \"function\") {\n    throw Error(\n      `The errorBoundary opt for single-spa-react must either be omitted or be a function that returns React elements`\n    );\n  }\n\n  if (!SingleSpaContext && opts.React.createContext) {\n    SingleSpaContext = opts.React.createContext();\n  }\n\n  opts.SingleSpaRoot = createSingleSpaRoot(opts);\n\n  const lifecycles = {\n    bootstrap: bootstrap.bind(null, opts),\n    mount: mount.bind(null, opts),\n    unmount: unmount.bind(null, opts),\n  };\n\n  if (opts.parcelCanUpdate) {\n    lifecycles.update = update.bind(null, opts);\n  }\n\n  return lifecycles;\n}\n\nfunction bootstrap(opts, props) {\n  if (opts.rootComponent) {\n    // This is a class or stateless function component\n    return Promise.resolve();\n  } else {\n    // They passed a promise that resolves with the react component. Wait for it to resolve before mounting\n    return opts.loadRootComponent(props).then((resolvedComponent) => {\n      opts.rootComponent = resolvedComponent;\n    });\n  }\n}\n\nfunction mount(opts, props) {\n  return new Promise((resolve, reject) => {\n    if (\n      !opts.suppressComponentDidCatchWarning &&\n      atLeastReact16(opts.React) &&\n      !opts.errorBoundary\n    ) {\n      if (!opts.rootComponent.prototype) {\n        console.warn(\n          `single-spa-react: ${\n            props.name || props.appName || props.childAppName\n          }'s rootComponent does not implement an error boundary.  If using a functional component, consider providing an opts.errorBoundary to singleSpaReact(opts).`\n        );\n      } else if (!opts.rootComponent.prototype.componentDidCatch) {\n        console.warn(\n          `single-spa-react: ${\n            props.name || props.appName || props.childAppName\n          }'s rootComponent should implement componentDidCatch to avoid accidentally unmounting the entire single-spa application.`\n        );\n      }\n    }\n\n    const whenMounted = function () {\n      resolve(this);\n    };\n\n    const elementToRender = getElementToRender(opts, props, whenMounted);\n    const domElement = chooseDomElementGetter(opts, props)();\n    const renderResult = reactDomRender({\n      elementToRender,\n      domElement,\n      opts,\n    });\n    opts.domElements[props.name] = domElement;\n    opts.renderResults[props.name] = renderResult;\n  });\n}\n\nfunction unmount(opts, props) {\n  return new Promise((resolve) => {\n    opts.unmountFinished = resolve;\n\n    const root = opts.renderResults[props.name];\n\n    if (root && root.unmount) {\n      // React >= 18\n      const unmountResult = root.unmount();\n    } else {\n      // React < 18\n      opts.ReactDOM.unmountComponentAtNode(opts.domElements[props.name]);\n    }\n    delete opts.domElements[props.name];\n    delete opts.renderResults[props.name];\n  });\n}\n\nfunction update(opts, props) {\n  return new Promise((resolve) => {\n    if (!opts.updateResolves[props.name]) {\n      opts.updateResolves[props.name] = [];\n    }\n\n    opts.updateResolves[props.name].push(resolve);\n\n    const elementToRender = getElementToRender(opts, props, null);\n    const renderRoot = opts.renderResults[props.name];\n    if (renderRoot && renderRoot.render) {\n      // React 18 with ReactDOM.createRoot()\n      renderRoot.render(elementToRender);\n    } else {\n      // React 16 / 17 with ReactDOM.render()\n      const domElement = chooseDomElementGetter(opts, props)();\n\n      // This is the old way to update a react application - just call render() again\n      opts.ReactDOM.render(elementToRender, domElement);\n    }\n  });\n}\n\nfunction atLeastReact16(React) {\n  if (\n    React &&\n    typeof React.version === \"string\" &&\n    React.version.indexOf(\".\") >= 0\n  ) {\n    const majorVersionString = React.version.slice(\n      0,\n      React.version.indexOf(\".\")\n    );\n    try {\n      return Number(majorVersionString) >= 16;\n    } catch (err) {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\nfunction reactDomRender({ opts, elementToRender, domElement }) {\n  const renderType =\n    typeof opts.renderType === \"function\" ? opts.renderType() : opts.renderType;\n  if (\n    [\n      \"createRoot\",\n      \"unstable_createRoot\",\n      \"createBlockingRoot\",\n      \"unstable_createBlockingRoot\",\n    ].indexOf(renderType) >= 0\n  ) {\n    const root = opts.ReactDOM[renderType](domElement);\n    root.render(elementToRender);\n    return root;\n  }\n\n  if (renderType === \"hydrate\") {\n    opts.ReactDOM.hydrate(elementToRender, domElement);\n  } else {\n    // default to this if 'renderType' is null or doesn't match the other options\n    opts.ReactDOM.render(elementToRender, domElement);\n  }\n\n  // The reactDomRender function should return a react root, but ReactDOM.hydrate() and ReactDOM.render()\n  // do not return a react root. So instead, we return null which indicates that there is no react root\n  // that can be used for updates or unmounting\n  return null;\n}\n\nfunction getElementToRender(opts, props, mountFinished) {\n  const rootComponentElement = opts.React.createElement(\n    opts.rootComponent,\n    props\n  );\n\n  let elementToRender = SingleSpaContext\n    ? opts.React.createElement(\n        SingleSpaContext.Provider,\n        { value: props },\n        rootComponentElement\n      )\n    : rootComponentElement;\n\n  if (\n    opts.errorBoundary ||\n    props.errorBoundary ||\n    opts.errorBoundaryClass ||\n    props.errorBoundaryClass\n  ) {\n    opts.errorBoundaryClass =\n      opts.errorBoundaryClass ||\n      props.errorBoundaryClass ||\n      createErrorBoundary(opts, props);\n    elementToRender = opts.React.createElement(\n      opts.errorBoundaryClass,\n      props,\n      elementToRender\n    );\n  }\n\n  // https://github.com/single-spa/single-spa-react/issues/112\n  elementToRender = opts.React.createElement(\n    opts.SingleSpaRoot,\n    {\n      ...props,\n      mountFinished,\n      updateFinished() {\n        if (opts.updateResolves[props.name]) {\n          opts.updateResolves[props.name].forEach((r) => r());\n          delete opts.updateResolves[props.name];\n        }\n      },\n      unmountFinished() {\n        setTimeout(opts.unmountFinished);\n      },\n    },\n    elementToRender\n  );\n\n  return elementToRender;\n}\n\nfunction createErrorBoundary(opts, props) {\n  // Avoiding babel output for class syntax and super()\n  // to avoid bloat\n  function SingleSpaReactErrorBoundary(props) {\n    // super\n    opts.React.Component.apply(this, arguments);\n\n    this.state = {\n      caughtError: null,\n      caughtErrorInfo: null,\n    };\n\n    SingleSpaReactErrorBoundary.displayName = `SingleSpaReactErrorBoundary(${props.name})`;\n  }\n\n  SingleSpaReactErrorBoundary.prototype = Object.create(\n    opts.React.Component.prototype\n  );\n\n  SingleSpaReactErrorBoundary.prototype.render = function () {\n    if (this.state.caughtError) {\n      const errorBoundary = opts.errorBoundary || props.errorBoundary;\n\n      return errorBoundary(\n        this.state.caughtError,\n        this.state.caughtErrorInfo,\n        this.props\n      );\n    } else {\n      return this.props.children;\n    }\n  };\n\n  SingleSpaReactErrorBoundary.prototype.componentDidCatch = function (\n    err,\n    info\n  ) {\n    this.setState({\n      caughtError: err,\n      caughtErrorInfo: info,\n    });\n  };\n\n  return SingleSpaReactErrorBoundary;\n}\n\nfunction createSingleSpaRoot(opts) {\n  // This is a class component, since we need a mount hook and single-spa-react supports React@15 (no useEffect available)\n  function SingleSpaRoot(_props) {\n    SingleSpaRoot.displayName = `SingleSpaRoot(${_props.name})`;\n  }\n\n  SingleSpaRoot.prototype = Object.create(opts.React.Component.prototype);\n  SingleSpaRoot.prototype.componentDidMount = function () {\n    setTimeout(this.props.mountFinished);\n  };\n  SingleSpaRoot.prototype.componentWillUnmount = function () {\n    setTimeout(this.props.unmountFinished);\n  };\n  SingleSpaRoot.prototype.render = function () {\n    // componentDidUpdate doesn't seem to be called during root.render() for updates\n    setTimeout(this.props.updateFinished);\n\n    return this.props.children;\n  };\n\n  return SingleSpaRoot;\n}\n"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","chooseDomElementGetter","opts","props","domElementGetter","domElement","appName","name","Error","htmlId","concat","document","getElementById","createElement","id","body","appendChild","defaultDomElementGetter","HTMLElement","SingleSpaContext","require","createContext","defaultOpts","React","ReactDOM","rootComponent","loadRootComponent","renderType","errorBoundary","errorBoundaryClass","parcelCanUpdate","suppressComponentDidCatchWarning","domElements","renderResults","updateResolves","singleSpaReact","userOpts","SingleSpaRoot","_props","displayName","Object","create","Component","componentDidMount","setTimeout","this","mountFinished","componentWillUnmount","unmountFinished","render","updateFinished","children","createSingleSpaRoot","lifecycles","bootstrap","bind","mount","unmount","update","Promise","resolve","then","resolvedComponent","reject","version","indexOf","majorVersionString","slice","Number","err","atLeastReact16","componentDidCatch","console","warn","childAppName","elementToRender","getElementToRender","renderResult","root","hydrate","reactDomRender","unmountComponentAtNode","push","renderRoot","rootComponentElement","Provider","value","SingleSpaReactErrorBoundary","apply","arguments","state","caughtError","caughtErrorInfo","info","setState","createErrorBoundary","forEach","r"],"sourceRoot":""}